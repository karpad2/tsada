name: Deploy SPA to builded branch

on:
  push:
    branches:
      - main  # or your main development branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Use the version of Node.js that your project requires

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build  # Adjust this if your build command is different

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p -e "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Deploy to builded branch
        env:
          VERSION: ${{ env.VERSION }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git clone --branch=builded --single-branch https://github-actions:${GH_TOKEN}@github.com/${{ github.repository }} deploy
          cd deploy
          rm -rf *  # Remove all existing files in the builded branch
          cp -r ../dist/* .  # Copy the built files to the builded branch
          git add .
          git commit -m "Deploy version $VERSION-r to builded branch"
          git push origin builded

    # New SSH step to deploy files to ~/tsada
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.ACCESS_TOKEN }}  # Use your named access token here

      - name: Deploy to Fedora server (~/tsada)
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "Deploying version $VERSION to Fedora server"
          
          # Define server connection details
          SERVER_USER="${{ secrets.USER }}"
          SERVER_HOST="${{ secrets.USERWEBHOST }}"
          SERVER_PORT="${{ secrets.PORT }}"
          DEPLOY_PATH="~/tsada"  # Deployment path is ~/tsada where Apache reads from

          # SSH to the server and pull the latest changes from the repository
          ssh -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "cd $DEPLOY_PATH && git pull origin main"

